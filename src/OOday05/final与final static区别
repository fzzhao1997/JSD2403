可变性：

使用 final 修饰的变量在初始化后不能再修改其值，它成为一个常量。
使用 final static 修饰的变量也是常量，但它是类级别的常量，一旦被赋予了初始值，所有实例共享同一个值，且不能再修改。它属于类的常量，不属于对象的常量。
作用域：

使用 final !!!修饰的变量可以是局部变量，也可以是实例变量!!!。
使用 final static 修饰的变量只能是!!!类变量，即静态变量。它属于类而不是对象!!!，在整个类的生命周期内都只有一个副本，被所有实例共享。
初始化时机：

!!!使用 final 修饰的变量可以在声明时直接赋值，也可以在构造方法中赋值。!!!(final属于实例),实例的在声明会在对象初始化时初始化,对象创建完在方法调用时也可以初始化
使用 final static 修饰的变量通常在声明时就直接赋值，因为它属于类而不是对象，只会被初始化一次。!!!
内存占用：

使用 final 修饰的变量在每个对象的内存中都会存储一份副本。
使用 final static 修饰的变量只会在方法区（Method Area）中存储一份副本，所有实例共享这个值，不会在每个对象的内存中重复存储。
总的来说，final 用于声明常量，可以是!!!实例级别的常量!!!；final static 用于声明!!!类级别的常量!!!，被所有实例共享。